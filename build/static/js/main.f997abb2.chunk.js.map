{"version":3,"sources":["Components/StockPriceChart.js","Components/StockInfo.js","utils/formatCash.js","api/getStock.js","api/getChartData.js","Components/SearchSymbol.js","App.js","index.js"],"names":["StockChartContainer","styled","div","xAxisTicks","StockPriceChart","formattedChartData","useState","hoverData","setHoverData","animation","height","width","xType","onMouseLeave","title","tickFormat","d","includes","onNearestX","value","data","StockInfoContainer","CompanyNameContainer","StockPriceContainer","StockDetailsContainer","StockInfo","n","stock","open","setOpen","Accordion","onChange","expanded","AccordionSummary","expandIcon","Typography","variant","companyName","symbol","primaryExchange","latestSource","AccordionDetails","className","latestPrice","change","changePercent","closeTime","Date","toLocaleString","weekday","year","month","day","hour","hour12","timeZone","timeZoneName","previousClose","marketCap","toFixed","iexBidPrice","iexBidSize","iexAskPrice","volume","avgTotalVolume","getStock","a","lowercasedSymbol","toLowerCase","trim","axios","get","process","getChartData","SymbolInputContainer","SearchSymbol","setStock","setSearch","setLoading","setChartData","error","setError","setSymbol","handleSubmit","e","preventDefault","stockPriceData","fetchedChartData","onSubmit","TextField","target","handleChange","fullWidth","label","helperText","Button","type","color","AppContainer","App","search","chartData","loading","useMemo","map","i","minute","average","x","y","slice","length","item","CircularProgress","style","marginTop","size","ReactDOM","render","document","getElementById"],"mappings":"0cAIA,IAAMA,EAAsBC,IAAOC,IAAV,KAQnBC,EAAa,CACjB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SAuCaC,EApCS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBAAyB,EAChBC,mBAAS,MADO,mBAC3CC,EAD2C,KAChCC,EADgC,KAElD,OACE,kBAACR,EAAD,KACE,kBAAC,IAAD,CACES,WAAS,EACTC,OAAQ,IACRC,MAAO,IACPC,MAAM,UACNC,aAAc,kBAAML,EAAa,QAEjC,kBAAC,IAAD,CACEM,MAAM,OACNC,WAAY,SAACC,GACX,OAAIb,EAAWc,SAASD,GACfA,OAEP,KAIN,kBAAC,IAAD,CAAOF,MAAM,iBACb,kBAAC,IAAD,CACEL,WAAS,EACTS,WAAY,SAACC,GACXX,EAAaW,IAEfC,KAAMf,IAGPE,GAAa,kBAAC,IAAD,CAAMY,MAAOZ,O,srDChDnC,IAAMc,EAAqBpB,IAAOC,IAAV,KAqDlBoB,EAAuBrB,IAAOC,IAAV,KAKpBqB,EAAsBtB,IAAOC,IAAV,KAyBnBsB,EAAwBvB,IAAOC,IAAV,KA8HZuB,EA9GG,SAAC,GAAmC,IC9G3BC,ED8GNC,EAAgC,EAAhCA,MAAOtB,EAAyB,EAAzBA,mBAAyB,EAC3BC,oBAAS,GADkB,mBAC5CsB,EAD4C,KACtCC,EADsC,KAGnD,OACE,kBAACR,EAAD,KACE,kBAACS,EAAA,EAAD,CAAWC,SAAU,kBAAMF,GAASD,IAAOI,SAAUJ,GACnD,kBAACK,EAAA,EAAD,CAAkBC,WAAY,kBAAC,IAAD,OAC5B,kBAACZ,EAAD,KACE,kBAACa,EAAA,EAAD,CAAYC,QAAQ,MACjBT,EAAMU,YADT,KACwBV,EAAMW,OAD9B,KAGA,kBAACH,EAAA,EAAD,CAAYC,QAAQ,aACjBT,EAAMY,gBADT,MAC6BZ,EAAMa,aADnC,uBAKJ,kBAACC,EAAA,EAAD,KACE,kBAAClB,EAAD,KACE,yBAAKmB,UAAU,SACb,kBAACP,EAAA,EAAD,CAAYC,QAAQ,MAClB,gCAAST,EAAMgB,cAEjB,0BACED,UAAS,yBACPf,EAAMiB,OAAS,GAAsB,IAAjBjB,EAAMiB,OACtB,2BACA,6BAGLjB,EAAMiB,OAAS,EAAI,IAAM,IAP5B,IAOkCjB,EAAMiB,OAPxC,KAQyB,IAAtBjB,EAAMkB,cART,OAWF,kBAACV,EAAA,EAAD,CAAYC,QAAQ,aAApB,YACY,IACTT,EAAMmB,UACH,IAAIC,KAAKpB,EAAMmB,WAAWE,eAAe,QAAS,CAChDC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,QAAQ,EACRC,SAAU,mBACVC,aAAc,UAEhB,OAEN,kBAAC,EAAD,CAAiBnD,mBAAoBA,IACrC,kBAACmB,EAAD,KACE,yBAAKkB,UAAU,gBACb,kBAACP,EAAA,EAAD,CAAYC,QAAQ,SAApB,kBACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAClB,gCACGT,EAAM8B,cAAgB9B,EAAM8B,cAAgB,SAInD,yBAAKf,UAAU,gBACb,kBAACP,EAAA,EAAD,CAAYC,QAAQ,SAApB,cACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAClB,iCC3KSV,ED2KWC,EAAM+B,WC1KlC,IAAYhC,EAChBA,GAAK,KAAOA,EAAI,OAAeA,EAAI,KAAKiC,QAAQ,GAAK,IACrDjC,GAAK,OAAeA,EAAI,MAAMiC,QAAQ,GAAK,SAA/C,KD2KY,yBAAKjB,UAAU,gBACb,kBAACP,EAAA,EAAD,CAAYC,QAAQ,SAApB,QACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAClB,gCAAST,EAAMC,KAAOD,EAAMC,KAAO,SAGvC,yBAAKc,UAAU,gBACb,kBAACP,EAAA,EAAD,CAAYC,QAAQ,SAApB,OACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAClB,gCACGT,EAAMiC,YAAN,UACMjC,EAAMiC,YADZ,cAC6BjC,EAAMkC,YAChC,SAIV,yBAAKnB,UAAU,gBACb,kBAACP,EAAA,EAAD,CAAYC,QAAQ,SAApB,OACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAClB,gCACGT,EAAMmC,YAAN,UACMnC,EAAMmC,YADZ,cAC6BnC,EAAMmC,aAChC,SAIV,yBAAKpB,UAAU,gBACb,kBAACP,EAAA,EAAD,CAAYC,QAAQ,SAApB,UACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAClB,gCAAST,EAAMoC,OAAOf,oBAG1B,yBAAKN,UAAU,gBACb,kBAACP,EAAA,EAAD,CAAYC,QAAQ,SAApB,cACA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,SAClB,gCAAST,EAAMqC,eAAehB,0B,4DE/MnCiB,EAAQ,uCAAG,WAAO3B,GAAP,mBAAA4B,EAAA,6DAChBC,EAAmB7B,EAAO8B,cAAcC,OADxB,SAGCC,IAAMC,IAAN,iDACqBJ,EADrB,wBACqDK,wCAJtD,uBAGdpD,EAHc,EAGdA,KAHc,kBAMfA,GANe,2CAAH,sDCARqD,EAAY,uCAAG,WAAOnC,GAAP,mBAAA4B,EAAA,6DACpBC,EAAmB7B,EAAO8B,cAAcC,OADpB,SAGHC,IAAMC,IAAN,iDACqBJ,EADrB,kCAC+DK,wCAJ5D,uBAGlBpD,EAHkB,EAGlBA,KAHkB,kBAOnBA,GAPmB,2CAAH,sD,+RCGzB,IAAMsD,EAAuBzE,IAAOC,IAAV,KAuEXyE,EAtDM,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAAmB,EAChDzE,mBAAS,MADuC,mBACnE0E,EADmE,KAC5DC,EAD4D,OAE9C3E,mBAAS,IAFqC,mBAEnEgC,EAFmE,KAE3D4C,EAF2D,KAIpEC,EAAY,uCAAG,WAAOC,GAAP,iBAAAlB,EAAA,6DACnBkB,EAAEC,iBACFJ,GAAS,kBAAM,QACfH,GAAW,kBAAM,KAHE,kBAKYb,EAAS3B,GALrB,cAKXgD,EALW,gBAMcb,EAAanC,GAN3B,OAMXiD,EANW,OAOjBX,GAAS,kBAAMU,KACfP,GAAa,kBAAMQ,KACnBV,GAAU,kBAAMvC,KATC,kDAWjB2C,GAAS,0BACTL,GAAS,kBAAM,QAZE,yBAcjBE,GAAW,kBAAM,KAdA,6EAAH,sDAyBlB,OACE,kBAACJ,EAAD,KACE,0BAAMc,SAAUL,EAAczC,UAAU,eACtC,kBAAC+C,EAAA,EAAD,CACEtE,MAAOmB,EACPP,SAAU,SAACqD,GAAD,OAZG,SAACA,GAChBJ,GACFC,GAAS,kBAAM,QAEjBC,EAAUE,EAAEM,OAAOvE,OAQIwE,CAAaP,IAC9B1C,UAAU,qBACVkD,WAAS,EACTC,MAAM,eACNb,QAAOA,EACPc,WAAYd,EAAQ,mBAAqB,KAE3C,kBAACe,EAAA,EAAD,CACEC,KAAK,SACLtD,UAAU,sBACVN,QAAQ,YACR6D,MAAM,WAJR,mB,kdC1DR,IAAMC,EAAejG,IAAOC,IAAV,KAQWD,IAAOC,IAAV,KA0DXiG,MAzCf,WAAgB,IAAD,EACe7F,mBAAS,IADxB,mBACN8F,EADM,KACEvB,EADF,OAEavE,mBAAS,MAFtB,mBAENqB,EAFM,KAECiD,EAFD,OAGqBtE,mBAAS,MAH9B,mBAGN+F,EAHM,KAGKtB,EAHL,OAIiBzE,oBAAS,GAJ1B,mBAINgG,EAJM,KAIGxB,EAJH,KAQPzE,EAAqBkG,mBAAQ,WACjC,OAAOF,EACHA,EAAUG,KAAI,WAAsBC,GAAO,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,QACvB,GAAID,GAAUC,EACZ,MAAO,CAAEC,EAAGF,EAAQG,EAAGF,GACjB,IAAD,gBACYN,EAAUS,MAAML,EAAGJ,EAAUU,SADzC,IACL,2BAAuD,CAAC,IAA/CC,EAA8C,QACrD,GAAIA,EAAKN,QAAUM,EAAKL,QACtB,MAAO,CAAEC,EAAGI,EAAKN,OAAQG,EAAGG,EAAKL,UAHhC,kCAQT,OACH,CAACP,IAEJ,OACE,kBAACF,EAAD,KACE,kBAAC,EAAD,CACEtB,SAAUA,EACVC,UAAWA,EACXC,WAAYA,EACZC,aAAcA,IAEfuB,EACC,kBAACW,EAAA,EAAD,CAAkBC,MAAO,CAAEC,UAAW,SAAWC,KAAK,SACpDzF,GAAStB,EACX,kBAAC,EAAD,CAAWA,mBAAoBA,EAAoBsB,MAAOA,IACxD,OC3DV0F,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,W","file":"static/js/main.f997abb2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { XYPlot, LineSeries, XAxis, YAxis, Hint } from 'react-vis';\nimport styled from 'styled-components';\n\nconst StockChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 2rem;\n  margin-right: 4rem;\n`;\n\nconst xAxisTicks = [\n  '09:30',\n  '10:00',\n  '10:30',\n  '11:00',\n  '11:30',\n  '12:00',\n  '12:30',\n  '13:00',\n  '13:30',\n  '14:00',\n  '14:30',\n  '15:00',\n  '15:30',\n  '16:00',\n];\n\nconst StockPriceChart = ({ formattedChartData }) => {\n  const [hoverData, setHoverData] = useState(null);\n  return (\n    <StockChartContainer>\n      <XYPlot\n        animation\n        height={300}\n        width={600}\n        xType='ordinal'\n        onMouseLeave={() => setHoverData(null)}\n      >\n        <XAxis\n          title='Time'\n          tickFormat={(d) => {\n            if (xAxisTicks.includes(d)) {\n              return d;\n            } else {\n              return;\n            }\n          }}\n        />\n        <YAxis title='Price in USD' />\n        <LineSeries\n          animation\n          onNearestX={(value) => {\n            setHoverData(value);\n          }}\n          data={formattedChartData}\n        />\n\n        {hoverData && <Hint value={hoverData} />}\n      </XYPlot>\n    </StockChartContainer>\n  );\n};\n\nexport default StockPriceChart;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport StockPriceChart from './StockPriceChart';\nimport { formatCash } from '../utils/formatCash';\nimport {\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Typography,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nconst StockInfoContainer = styled.div`\n  width: 75rem;\n  margin: 5rem 0 5rem 0rem;\n  display: flex;\n  flex-direction: column;\n  transition: visibility 5s ease-in;\n  animation: fadeIn ease 1s;\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  @-moz-keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @-webkit-keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @-o-keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @-ms-keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nconst CompanyNameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StockPriceContainer = styled.div`\n  margin-left: 3rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  .price {\n    display: flex;\n\n    &__percent {\n      align-self: center;\n      margin-left: 1rem;\n      margin-top: 1.5rem;\n      font-size: 2rem;\n\n      &--positive {\n        color: green;\n      }\n\n      &--negative {\n        color: red;\n      }\n    }\n  }\n`;\n\nconst StockDetailsContainer = styled.div`\n  margin-top: 2rem;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-row-gap: 1rem;\n  width: 100%;\n\n  .summary-item {\n    width: 90%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: solid 1px lightgrey;\n  }\n`;\n\nconst StockInfo = ({ stock, formattedChartData }) => {\n  const [open, setOpen] = useState(true);\n\n  return (\n    <StockInfoContainer>\n      <Accordion onChange={() => setOpen(!open)} expanded={open}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n          <CompanyNameContainer>\n            <Typography variant='h4'>\n              {stock.companyName} ({stock.symbol})\n            </Typography>\n            <Typography variant='subtitle1'>\n              {stock.primaryExchange} - {stock.latestSource}. Currency in USD\n            </Typography>\n          </CompanyNameContainer>\n        </AccordionSummary>\n        <AccordionDetails>\n          <StockPriceContainer>\n            <div className='price'>\n              <Typography variant='h2'>\n                <strong>{stock.latestPrice}</strong>\n              </Typography>\n              <span\n                className={`price__percent ${\n                  stock.change > 0 && stock.change !== 0\n                    ? 'price__percent--positive'\n                    : 'price__percent--negative'\n                }`}\n              >\n                {stock.change > 0 ? '+' : '-'} {stock.change} (\n                {stock.changePercent * 100}%)\n              </span>\n            </div>\n            <Typography variant='subtitle2'>\n              At close:{' '}\n              {stock.closeTime\n                ? new Date(stock.closeTime).toLocaleString('en-US', {\n                    weekday: 'long',\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric',\n                    hour: 'numeric',\n                    hour12: true,\n                    timeZone: 'America/New_York',\n                    timeZoneName: 'short',\n                  })\n                : 'N/A'}\n            </Typography>\n            <StockPriceChart formattedChartData={formattedChartData} />\n            <StockDetailsContainer>\n              <div className='summary-item'>\n                <Typography variant='body1'>Previous Close</Typography>\n                <Typography variant='body1'>\n                  <strong>\n                    {stock.previousClose ? stock.previousClose : 'N/A'}\n                  </strong>\n                </Typography>\n              </div>\n              <div className='summary-item'>\n                <Typography variant='body1'>Market Cap</Typography>\n                <Typography variant='body1'>\n                  <strong>{formatCash(stock.marketCap)}</strong>\n                </Typography>\n              </div>\n              <div className='summary-item'>\n                <Typography variant='body1'>Open</Typography>\n                <Typography variant='body1'>\n                  <strong>{stock.open ? stock.open : 'N/A'}</strong>\n                </Typography>\n              </div>\n              <div className='summary-item'>\n                <Typography variant='body1'>Bid</Typography>\n                <Typography variant='body1'>\n                  <strong>\n                    {stock.iexBidPrice\n                      ? `${stock.iexBidPrice} x ${stock.iexBidSize}`\n                      : 'N/A'}\n                  </strong>\n                </Typography>\n              </div>\n              <div className='summary-item'>\n                <Typography variant='body1'>Ask</Typography>\n                <Typography variant='body1'>\n                  <strong>\n                    {stock.iexAskPrice\n                      ? `${stock.iexAskPrice} x ${stock.iexAskPrice}`\n                      : 'N/A'}\n                  </strong>\n                </Typography>\n              </div>\n              <div className='summary-item'>\n                <Typography variant='body1'>Volume</Typography>\n                <Typography variant='body1'>\n                  <strong>{stock.volume.toLocaleString()}</strong>\n                </Typography>\n              </div>\n              <div className='summary-item'>\n                <Typography variant='body1'>Avg Volume</Typography>\n                <Typography variant='body1'>\n                  <strong>{stock.avgTotalVolume.toLocaleString()}</strong>\n                </Typography>\n              </div>\n            </StockDetailsContainer>\n          </StockPriceContainer>\n        </AccordionDetails>\n      </Accordion>\n    </StockInfoContainer>\n  );\n};\n\nexport default StockInfo;\n","export const formatCash = (n) => {\n  if (n < 1e3) return n;\n  if (n >= 1e9 && n < 1e12) return +(n / 1e9).toFixed(2) + 'B';\n  if (n >= 1e12) return +(n / 1e12).toFixed(2) + 'T';\n};\n","import axios from 'axios';\n\nexport const getStock = async (symbol) => {\n  const lowercasedSymbol = symbol.toLowerCase().trim();\n\n  const { data } = await axios.get(\n    `https://cloud.iexapis.com/stable/stock/${lowercasedSymbol}/quote?token=${process.env.REACT_APP_IEX_API_TOKEN}`\n  );\n  return data;\n};\n","import axios from 'axios';\n\nexport const getChartData = async (symbol) => {\n  const lowercasedSymbol = symbol.toLowerCase().trim();\n\n  const { data } = await axios.get(\n    `https://cloud.iexapis.com/stable/stock/${lowercasedSymbol}/intraday-prices?token=${process.env.REACT_APP_IEX_API_TOKEN}`\n  );\n\n  return data;\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { TextField, Button } from '@material-ui/core';\nimport { getStock } from '../api/getStock';\nimport { getChartData } from '../api/getChartData';\nconst SymbolInputContainer = styled.div`\n  .search-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    &__input {\n      width: 30rem;\n    }\n\n    &__button {\n      margin-top: 1rem;\n      width: 10rem;\n    }\n  }\n`;\n\nconst SearchSymbol = ({ setStock, setSearch, setLoading, setChartData }) => {\n  const [error, setError] = useState(null);\n  const [symbol, setSymbol] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(() => null);\n    setLoading(() => true);\n    try {\n      const stockPriceData = await getStock(symbol);\n      const fetchedChartData = await getChartData(symbol);\n      setStock(() => stockPriceData);\n      setChartData(() => fetchedChartData);\n      setSearch(() => symbol);\n    } catch (error) {\n      setError(() => error);\n      setStock(() => null);\n    } finally {\n      setLoading(() => false);\n    }\n  };\n\n  const handleChange = (e) => {\n    if (error) {\n      setError(() => null);\n    }\n    setSymbol(e.target.value);\n  };\n\n  return (\n    <SymbolInputContainer>\n      <form onSubmit={handleSubmit} className='search-form'>\n        <TextField\n          value={symbol}\n          onChange={(e) => handleChange(e)}\n          className='search-form__input'\n          fullWidth\n          label='Stock symbol'\n          error={error ? true : false}\n          helperText={error ? 'Symbol not found' : ''}\n        />\n        <Button\n          type='submit'\n          className='search-form__button'\n          variant='contained'\n          color='primary'\n        >\n          Get Stocked!\n        </Button>\n      </form>\n    </SymbolInputContainer>\n  );\n};\n\nexport default SearchSymbol;\n","import React, { useState, useMemo } from 'react';\nimport styled from 'styled-components';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport StockInfo from './Components/StockInfo';\nimport SearchSymbol from './Components/SearchSymbol';\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 5rem;\n  height: 100vh;\n`;\n\nconst SymbolInputContainer = styled.div`\n  .search-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    &__input {\n      width: 30rem;\n    }\n\n    &__button {\n      margin-top: 1rem;\n      width: 10rem;\n    }\n  }\n`;\n\nfunction App() {\n  const [search, setSearch] = useState('');\n  const [stock, setStock] = useState(null);\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  //Memoize x and y axis of stock chart data to prevent this expensive computation\n  // from running every rerender\n  const formattedChartData = useMemo(() => {\n    return chartData\n      ? chartData.map(({ minute, average }, i) => {\n          if (minute && average) {\n            return { x: minute, y: average };\n          } else {\n            for (let item of chartData.slice(i, chartData.length)) {\n              if (item.minute && item.average) {\n                return { x: item.minute, y: item.average };\n              }\n            }\n          }\n        })\n      : null;\n  }, [search]);\n\n  return (\n    <AppContainer>\n      <SearchSymbol\n        setStock={setStock}\n        setSearch={setSearch}\n        setLoading={setLoading}\n        setChartData={setChartData}\n      />\n      {loading ? (\n        <CircularProgress style={{ marginTop: '10rem' }} size='5rem' />\n      ) : stock && formattedChartData ? (\n        <StockInfo formattedChartData={formattedChartData} stock={stock} />\n      ) : null}\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"react-vis/dist/style.css\";\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}